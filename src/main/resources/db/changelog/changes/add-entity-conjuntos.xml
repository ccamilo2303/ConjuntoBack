<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">


    <changeSet id="1" author="ccamilo">
        <sql>
            CREATE TABLE "estado" (
            "id" UUID PRIMARY KEY,
            "nombre" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "residente_conjunto" (
            "id" UUID PRIMARY KEY,
            "id_residente" UUID,
            "id_conjunto" UUID,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "conjunto" (
            "id" UUID PRIMARY KEY,
            "nombre" varchar,
            "ciudad" varchar,
            "direccion" varchar,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "aviso" (
            "id" UUID PRIMARY KEY,
            "titulo" varchar,
            "contenido" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "notificacion" (
            "id" UUID PRIMARY KEY,
            "id_unidad" UUID,
            "id_aviso" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "residente" (
            "id" UUID PRIMARY KEY,
            "nombre" varchar,
            "email" varchar,
            "telefono" varchar,
            "id_tipo" UUID,
            "id_estado" UUID,
            "id_firebase" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "administrador" (
            "id" UUID PRIMARY KEY,
            "nombre" varchar,
            "email" varchar,
            "telefono" varchar,
            "id_estado" UUID,
            "id_firebase" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "administrador_conjunto" (
            "id" UUID PRIMARY KEY,
            "id_administrador" UUID,
            "id_conjunto" UUID,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "tipo_residente" (
            "id" UUID PRIMARY KEY,
            "tipo" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "solicitud_registro" (
            "id" UUID PRIMARY KEY,
            "id_residente" UUID,
            "id_estado" UUID,
            "id_conjunto" UUID,
            "descripcion" varchar,
            "comentario" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "unidad" (
            "id" UUID PRIMARY KEY,
            "interior" integer,
            "apto" integer,
            "id_conjunto" UUID,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "residente_unidad" (
            "id" UUID PRIMARY KEY,
            "id_residente" UUID,
            "id_unidad" UUID,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "cuenta_cobro_unidad" (
            "id" UUID PRIMARY KEY,
            "id_unidad" UUID,
            "id_estado" UUID,
            "fecha_inicio" timestamp,
            "fecha_fin" timestamp,
            "total" decimal(10,2),
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "concepto_cuenta_cobro" (
            "id" UUID PRIMARY KEY,
            "id_cuenta_cobro" UUID,
            "id_concepto" UUID,
            "valor" decimal(10,2),
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "concepto" (
            "id" UUID PRIMARY KEY,
            "nombre" varchar,
            "valor" decimal(10,2),
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "unidad_concepto" (
            "id" UUID PRIMARY KEY,
            "id_unidad" UUID,
            "id_concepto" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "metodo_pago" (
            "id" UUID PRIMARY KEY,
            "nombre" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "pago" (
            "id" UUID PRIMARY KEY,
            "id_cuenta_cobro_unidad" UUID,
            "valor" decimal(10,2),
            "id_metodo_pago" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "parqueadero" (
            "id" UUID PRIMARY KEY,
            "id_tipo_parqueadero" UUID,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "tipo_parquedero" (
            "id" UUID PRIMARY KEY,
            "tipo" varchar,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            CREATE TABLE "unidad_parqueadero" (
            "id" UUID PRIMARY KEY,
            "id_unidad" UUID,
            "id_parqueadero" UUID,
            "id_estado" UUID,
            "fecha_creacion" timestamp,
            "fecha_actualizacion" timestamp
            );

            ALTER TABLE "residente_conjunto" ADD FOREIGN KEY ("id_residente") REFERENCES "residente" ("id");

            ALTER TABLE "residente_conjunto" ADD FOREIGN KEY ("id_conjunto") REFERENCES "conjunto" ("id");

            ALTER TABLE "residente_conjunto" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "conjunto" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "notificacion" ADD FOREIGN KEY ("id_aviso") REFERENCES "aviso" ("id");

            ALTER TABLE "notificacion" ADD FOREIGN KEY ("id_unidad") REFERENCES "unidad" ("id");

            ALTER TABLE "administrador" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "administrador_conjunto" ADD FOREIGN KEY ("id_administrador") REFERENCES "administrador" ("id");

            ALTER TABLE "administrador_conjunto" ADD FOREIGN KEY ("id_conjunto") REFERENCES "conjunto" ("id");

            ALTER TABLE "administrador_conjunto" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "solicitud_registro" ADD FOREIGN KEY ("id_residente") REFERENCES "residente" ("id");

            ALTER TABLE "solicitud_registro" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "solicitud_registro" ADD FOREIGN KEY ("id_conjunto") REFERENCES "conjunto" ("id");

            ALTER TABLE "unidad" ADD FOREIGN KEY ("id_conjunto") REFERENCES "conjunto" ("id");

            ALTER TABLE "unidad" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "residente_unidad" ADD FOREIGN KEY ("id_residente") REFERENCES "residente" ("id");

            ALTER TABLE "residente_unidad" ADD FOREIGN KEY ("id_unidad") REFERENCES "unidad" ("id");

            ALTER TABLE "residente_unidad" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "cuenta_cobro_unidad" ADD FOREIGN KEY ("id_unidad") REFERENCES "unidad" ("id");

            ALTER TABLE "cuenta_cobro_unidad" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "concepto_cuenta_cobro" ADD FOREIGN KEY ("id_cuenta_cobro") REFERENCES "cuenta_cobro_unidad" ("id");

            ALTER TABLE "concepto_cuenta_cobro" ADD FOREIGN KEY ("id_concepto") REFERENCES "concepto" ("id");

            ALTER TABLE "unidad_concepto" ADD FOREIGN KEY ("id_unidad") REFERENCES "unidad" ("id");

            ALTER TABLE "unidad_concepto" ADD FOREIGN KEY ("id_concepto") REFERENCES "concepto" ("id");

            ALTER TABLE "pago" ADD FOREIGN KEY ("id_cuenta_cobro_unidad") REFERENCES "cuenta_cobro_unidad" ("id");

            ALTER TABLE "pago" ADD FOREIGN KEY ("id_metodo_pago") REFERENCES "metodo_pago" ("id");

            ALTER TABLE "parqueadero" ADD FOREIGN KEY ("id_tipo_parqueadero") REFERENCES "tipo_parquedero" ("id");

            ALTER TABLE "unidad_parqueadero" ADD FOREIGN KEY ("id_parqueadero") REFERENCES "parqueadero" ("id");

            ALTER TABLE "unidad_parqueadero" ADD FOREIGN KEY ("id_unidad") REFERENCES "unidad" ("id");

            ALTER TABLE "unidad_parqueadero" ADD FOREIGN KEY ("id_estado") REFERENCES "estado" ("id");

            ALTER TABLE "residente" ADD FOREIGN KEY ("id_tipo") REFERENCES "tipo_residente" ("id");
        </sql>
    </changeSet>

</databaseChangeLog>