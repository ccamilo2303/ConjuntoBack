openapi: 3.0.1
info:
  description: App conjunto integration
  version: 1.0.0
  license:
    name: Licencia Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  title: Conjunto app Service API
servers:
  - url: https://#uri/api/1.0.0
tags:
  - name: app
    description: endpoints para las apps
  - name: web
    description: endpoints para la web
  - name: web-solicitudes
    description: endpoints para la web
  - name: web-residentes
    description: endpoints para la web
  - name: web-unidades
    description: endpoints para la web
  - name: web-cuenta-cobro
    description: endpoints para la web
paths:
  /app/conjuntos:
    get:
      tags:
        - app
      operationId: conjuntos
      summary: Obtiene un listado de conjuntos residenciales
      description: Permite consultar un listado de conjuntos residenciales, con posibilidad de filtrar por nombre, ubicación o estado.
      parameters:
        - in: query
          name: nombre
          required: false
          description: Nombre del conjunto residencial para realizar una búsqueda.
          schema:
            type: string
            example: "Conjunto El Paraíso"
        - in: query
          name: ubicacion
          required: false
          description: Ubicación o ciudad del conjunto residencial para realizar una búsqueda.
          schema:
            type: string
            example: "Bogotá"
        - in: query
          name: estado
          required: false
          description: Estado del conjunto residencial (activo o inactivo) para realizar un filtro.
          schema:
            type: string
            enum: ['activo', 'inactivo']
            example: "activo"
        - in: query
          name: limit
          required: false
          description: Número de conjuntos residenciales a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Listado de conjuntos residenciales consultado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConjuntosRes'
        '400':
          description: Error en los parámetros de búsqueda proporcionados
        '404':
          description: No se encontraron conjuntos residenciales con los filtros aplicados

  /app/residentes/registro:
    post:
      tags:
        - app
      operationId: residentesRegistro
      summary: Registra una nueva solicitud de registro para un residente o propietario
      description: Permite a un residente o propietario enviar su solicitud de registro en la app. La solicitud quedará en estado "pendiente" hasta ser revisada por un administrador.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidenteRegistroRequest'

      responses:
        '201':
          description: Solicitud de registro creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidenteRegistroResponse'
        '400':
          description: Error de validación en los datos enviados
        '409':
          description: Ya existe una solicitud con ese correo electrónico

  /web/solicitudes:
    get:
      tags:
        - web-solicitudes
      operationId: solicitudes
      summary: Obtiene una lista de las solicitudes de registro de residentes
      description: Permite al administrador consultar todas las solicitudes de registro, incluyendo su estado (pendiente, aprobado, rechazado).
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
        - in: query
          name: estadoSolicitud
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: true
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: true
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0

      responses:
        '200':
          description: Lista de solicitudes de registro de residentes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Solicitud"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes

  /web/solicitud/{id}/estado:
    put:
      tags:
        - web-solicitudes
      operationId: solicitudEstado
      summary: Aprobar o rechazar solicitud de residente
      parameters:
        - in: path
          name: id
          required: true
          description: ID de la solicitud
          schema:
            type: string
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                estadoSolicitud:
                  type: string
                motivoRechazo:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Estado de la solicitud actualizado
        '400':
          description: Error al actualizar el estado
  /web/residentes:
    get:
      tags:
        - web-residentes
      operationId: residentes
      summary: Obtiene una lista de los residentes del conjunto
      description: Permite al administrador consultar todas las solicitudes de registro, incluyendo su estado (pendiente, aprobado, rechazado).
      parameters:
        - in: query
          name: page
          required: true
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: true
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de solicitudes de registro de residentes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Residentes"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes

  /web/residente/{idResidente}/estado:
    put:
      tags:
        - web-residentes
      operationId: residenteEstado
      summary: Cambiar estado del residente
      parameters:
        - in: path
          name: idResidente
          required: true
          description: ID del residente
          schema:
            type: string
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idEstado:
                  type: string
      responses:
        '200':
          description: Estado de la solicitud actualizado
        '400':
          description: Error al actualizar el estado

  /web/residente/{idResidente}/tipo:
    put:
      tags:
        - web-residentes
      operationId: residenteTipo
      summary: Cambiar tipo del residente
      parameters:
        - in: path
          name: idResidente
          required: true
          description: ID del residente
          schema:
            type: string
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idTipo:
                  type: string
      responses:
        '200':
          description: Estado de la solicitud actualizado
        '400':
          description: Error al actualizar el estado



  /web/residente/{idResidente}/unidad:
    get:
      tags:
        - web-residentes
      operationId: residenteUnidad
      summary: Obtiene una lista con las unidades relacionadas al cliente
      parameters:
        - name: idResidente
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResidenteUnidad"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes

  /web/unidades:
    get:
      tags:
        - web-unidades
      operationId: unidades
      summary: Obtiene una lista de todas las unidades
      parameters:
        - in: query
          name: page
          required: false
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnidadesConjunto"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes
  /web/unidad/{idUnidad}/residentes:
    get:
      tags:
        - web-unidades
      operationId: unidadResidentes
      summary: Obtiene una lista de todos los residentes asociados a una unidad
      parameters:
        - name: idUnidad
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResidentesUnidad"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes


  /web/unidad/{idUnidad}/conceptos:
    get:
      tags:
        - web-unidades
      operationId: unidadeConceptos
      summary: Obtiene una lista de todos los conceptos asociados a una unidad
      parameters:
        - name: idUnidad
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnidadConceptos"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes

  /web/unidad/{idUnidad}/cuentas-cobro:
    get:
      tags:
        - web-unidades
      operationId: unidadCuentasCobro
      summary: Obtiene una lista de todos las cuentas de cobro asociadas a la unidad
      parameters:
        - name: idUnidad
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: size
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnidadCuentasCobro"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes
  /web/unidad/{idUnidad}/concepto/{idConcepto}:
    put:
      tags:
        - web-unidades
      operationId: unidadConcepto
      summary: Asocia un concepto con la unidad
      parameters:
        - name: idUnidad
          in: path
          required: true
          schema:
            type: string
        - name: idConcepto
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes
  /web/unidad/{idUnidad}/residente/{idResidente}:
    put:
      tags:
        - web-unidades
      operationId: unidadResidente
      summary: Asocia un residente con la unidad
      parameters:
        - name: idUnidad
          in: path
          required: true
          schema:
            type: string
        - name: idResidente
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes

  /web/unidad/{idResidenteUnidad}:
    delete:
      tags:
        - web-unidades
      operationId: eliminaUnidadResidente
      summary: Elimina la relación de unidad con residente
      parameters:
        - name: idResidenteUnidad
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de unidades del residente
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes


  /app/residentes/facturas:
    get:
      tags:
        - app
      operationId: residentesFacturas
      summary: Obtiene las facturas de un residente
      responses:
        '200':
          description: Lista de facturas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FacturaResponse'

        '404':
          description: Residente no encontrado




  /web/cuenta-cobro:
    post:
      tags:
        - web-cuenta-cobro
      operationId: crearCuentaCobro
      summary: Registra cuentas de cobro para todas las unidades
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrarCuentaCobro'
      responses:
        '200':
          description: Lista de unidades del residente
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes
    get:
      tags:
        - web-cuenta-cobro
      operationId: CuentaCobro
      summary: Consulta todas las cuentas de cobro
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: size
          in: query
          required: true
          schema:
            type: integer
        - name: idUnidad
          in: query
          required: false
          schema:
            type: string
        - name: estado
          in: query
          required: false
          schema:
            type: string
        - name: fechaInicio
          in: query
          required: false
          schema:
            type: string
        - name: fechaFin
          in: query
          required: false
          schema:
            type: string
        - name: c
          in: query
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Lista de unidades del residente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CuentasCobro"
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes
  /web/cuenta-cobro/unidad:
    post:
      tags:
        - web-cuenta-cobro
      operationId: cuentaCobroUnidad
      summary: Registra una cuenta de cobro para una unidad
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrarCuentaCobroUnidad'
      responses:
        '200':
          description: Lista de unidades del residente
        '400':
          description: Parámetros de solicitud inválidos
        '404':
          description: No se encontraron solicitudes

  /web/cuenta-cobro/pagos/manual:
    post:
      tags:
        - web-cuenta-cobro
      operationId: pagoManual
      summary: Marca un pago manual realizado por un residente (por transferencia, efectivo, etc.)
      description: Permite al administrador registrar un pago manual para una factura (por ejemplo, pagos realizados por transferencia o en efectivo).
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagoManual'
      responses:
        '200':
          description: Pago manual registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID del pago registrado
                    example: 456
                  factura_id:
                    type: integer
                    description: ID de la factura asociada al pago
                    example: 345
                  monto_pagado:
                    type: number
                    format: float
                    description: Monto pagado
                    example: 150000.00
                  metodo_pago:
                    type: string
                    enum: ['transferencia', 'efectivo']
                    description: Método de pago utilizado
                    example: "transferencia"
                  fecha_pago:
                    type: string
                    format: date-time
                    description: Fecha en que se registró el pago
                    example: "2025-01-30T14:30:00Z"
        '400':
          description: Error en los datos proporcionados (por ejemplo, factura no encontrada)
        '404':
          description: Factura no encontrada


  /web/avisos:
    post:
      tags:
        - web
      operationId: avisos
      summary: Publicar un aviso para todos los residentes
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                contenido:
                  type: string
      responses:
        '201':
          description: Aviso publicado correctamente
        '400':
          description: Error al publicar el aviso

  /app/avisos/historial:
    get:
      tags:
        - app
      operationId: avisosHistorial
      summary: Obtiene el historial de avisos enviados a los residentes
      description: Permite a los residentes consultar el historial de avisos publicados por el administrador en un rango de fechas específico.
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
        - in: query
          name: fecha_inicio
          required: false
          description: Fecha de inicio del rango de fechas para consultar los avisos
          schema:
            type: string
            format: date
            example: "2025-01-01"
        - in: query
          name: fecha_fin
          required: false
          description: Fecha de fin del rango de fechas para consultar los avisos
          schema:
            type: string
            format: date
            example: "2025-01-31"
        - in: query
          name: limit
          required: false
          description: Número de registros a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Historial de avisos consultado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistorialAvisosResponse'
        '400':
          description: Error en los parámetros de fecha proporcionados
        '404':
          description: No se encontraron avisos en el rango de fechas proporcionado

  /web/notificaciones:
    post:
      tags:
        - web
      operationId: notificaciones
      summary: Enviar notificación de aviso a los residentes
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aviso_id:
                  type: integer
                unidad_id:
                  type: integer
                tipo:
                  type: string
                  enum: ['push', 'email']
      responses:
        '200':
          description: Notificación enviada
        '400':
          description: Error al enviar la notificación
  /app/usuarios/estado-cuenta:
    get:
      tags:
        - app
      operationId: usuariosEstadoCuenta
      summary: Obtiene el estado de cuenta del usuario, incluyendo saldo a favor y saldo en mora
      description: Permite al residente consultar su estado de cuenta, incluyendo el estado, saldo a favor y saldo en mora.
      responses:
        '200':
          description: Información del estado de cuenta del usuario consultada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  usuario_id:
                    type: integer
                    description: ID del usuario
                    example: 101
                  nombre:
                    type: string
                    description: Nombre del residente
                    example: "Juan Pérez"
                  estado:
                    type: string
                    description: Estado actual del usuario (por ejemplo, "activo", "moroso")
                    example: "activo"
                  saldo_a_favor:
                    type: number
                    format: float
                    description: Monto total que el usuario tiene a favor (saldo positivo)
                    example: 200000.00
                  saldo_en_mora:
                    type: number
                    format: float
                    description: Monto total que el usuario tiene pendiente en mora (saldo negativo)
                    example: 50000.00
                  total_deuda:
                    type: number
                    format: float
                    description: Total de la deuda combinando saldo a favor y en mora
                    example: 150000.00
        '400':
          description: Error en el formato del ID del usuario
        '404':
          description: No se encontró el usuario con el ID proporcionado

  /app/usuarios/historial-pagos:
    get:
      tags:
        - app
      operationId: usuariosHistorialPagos
      summary: Obtiene el historial de pagos realizados por un residente
      description: Permite a un residente consultar su historial de pagos, con la opción de filtrar por rango de fechas.
      parameters:
        - in: query
          name: fecha_inicio
          required: false
          description: Fecha de inicio del rango de fechas para consultar los pagos
          schema:
            type: string
            format: date
            example: "2025-01-01"
        - in: query
          name: fecha_fin
          required: false
          description: Fecha de fin del rango de fechas para consultar los pagos
          schema:
            type: string
            format: date
            example: "2025-01-31"
        - in: query
          name: limit
          required: false
          description: Número de pagos a devolver por página (paginación).
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          required: false
          description: Número de registros a omitir antes de empezar a devolver los resultados (paginación).
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Historial de pagos consultado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Total de pagos realizados por el residente.
                    example: 15
                  pagos:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID único del pago.
                          example: 345
                        monto:
                          type: number
                          format: float
                          description: Monto pagado por el residente.
                          example: 150000.00
                        metodo_pago:
                          type: string
                          description: Método utilizado para el pago (ej. "Stripe", "Transferencia Bancaria").
                          example: "Stripe"
                        fecha_pago:
                          type: string
                          format: date-time
                          description: Fecha y hora en que se realizó el pago.
                          example: "2025-01-15T14:30:00Z"
                        factura_id:
                          type: integer
                          description: ID de la factura a la que corresponde el pago.
                          example: 1011
        '400':
          description: Error en los parámetros de búsqueda proporcionados
        '404':
          description: No se encontraron pagos para el residente con el ID proporcionado
  /web/conceptos:
    get:
      tags:
        - web-conceptos
      operationId: consultarConcepto
      summary: Obtener todos los conceptos
      description: Retorna una lista de conceptos con sus valores configurados.
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
      responses:
        '200':
          description: Lista de conceptos obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conceptos'
    post:
      tags:
        - web-conceptos
      operationId: crearConcepto
      summary: Crear un nuevo concepto
      description: Permite al administrador agregar un nuevo concepto con su valor.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConceptoCrear'
      responses:
        '201':
          description: Concepto creado exitosamente
  /web/conceptos/{id}:
    put:
      tags:
        - web-conceptos
      operationId: actualizarConcepto
      summary: Actualizar un concepto
      description: Modifica los valores de un concepto existente.
      parameters:
        - in: query
          name: c
          required: true
          description: Id del conjunto
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConceptoCrear'
      responses:
        '200':
          description: Concepto actualizado exitosamente
        '404':
          description: Concepto no encontrado
    delete:
      tags:
        - web-conceptos
      operationId: eliminarConcepto
      summary: Eliminar un concepto
      description: Permite eliminar un concepto por su ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Concepto eliminado exitosamente
        '404':
          description: Concepto no encontrado


  /web/conjuntos:
    get:
      tags:
        - web-conjuntos
      operationId: conjuntosDisponibles
      summary: Conjuntos disponibles para el admin/residente
      responses:
        '200':
          description: Lista de conceptos obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConjuntosRes'
        '404':
          description: Error interno



components:
  schemas:
    Residentes:
      type: object
      properties:
        residentes:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Residente'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'

    Conceptos:
      type: object
      properties:
        conceptos:
          type: array
          items:
            $ref: '#/components/schemas/Concepto'

    Concepto:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
          example: "Cuota de administración"
        valor:
          type: number
          format: double
          example: 150000
        fechaRegistro:
          type: string
    ConceptoCrear:
      type: object
      properties:
        nombre:
          type: string
          example: "Cuota de administración"
        valor:
          type: number
          format: double
          example: 150000


    ConjuntosRes:
      type: object
      properties:
        total:
          type: integer
          description: Total de conjuntos residenciales disponibles
          example: 25
        conjuntos:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: ID único del conjunto residencial
                example: 101
              nombre:
                type: string
                description: Nombre del conjunto residencial
                example: "Conjunto El Paraíso"
              ubicacion:
                type: string
                description: Ubicación o ciudad del conjunto residencial
                example: "Bogotá"
              estado:
                type: string
                enum: ['activo', 'inactivo']
                description: Estado del conjunto residencial
                example: "activo"
              fecha_creacion:
                type: string
                format: date-time
                description: Fecha en que fue creado el conjunto residencial
                example: "2020-05-15T14:30:00Z"
              direccion:
                type: string
                description: direccion del conjunto residencial

    ResidenteRegistroRequest:
      type: object
      properties:
        nombre:
          type: string
          description: Nombre completo del residente o propietario
          example: "Juan Pérez"
        email:
          type: string
          format: email
          description: Correo electrónico del residente o propietario
          example: "juan.perez@email.com"
        telefono:
          type: string
          description: Número de teléfono de contacto del residente o propietario
          example: "+573001234567"
        tipo:
          type: string
          enum: ['propietario', 'arrendatario']
          description: Tipo de residente que solicita registro en la app
        conjunto:
          type: integer
          description: ID del conjunto
        interior:
          type: number
          description: Número de la torre o interior
        apto:
          type: number
          description: Número del apartamento
    ResidenteRegistroResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID único de la solicitud de registro
          example: 123
        estado_solicitud:
          type: string
          enum: ['pendiente']
          description: Estado inicial de la solicitud
          example: "pendiente"
        fecha_registro:
          type: string
          format: date-time
          description: Fecha y hora en que se registró la solicitud
          example: "2025-01-30T10:00:00Z"

    FacturaResponse:
      type: object
      properties:
        id:
          type: integer
        total:
          type: number
          format: float
        estado:
          type: string
        conceptos:
          type: array
          items:
            $ref: '#/components/schemas/ConceptoFactura'
    ConceptoFactura:
      type: object
      properties:
        concepto:
          type: string
          description: Concepto del cobro
        monto:
          type: number
          description: Monto del cobro
    Aviso:
      type: object
      properties:
        id:
          type: integer
          description: ID único del aviso
          example: 123
        titulo:
          type: string
          description: Título del aviso
          example: "Mantenimiento programado"
        contenido:
          type: string
          description: Contenido del aviso
          example: "Se informa a todos los residentes que el próximo jueves habrá mantenimiento programado..."
        fecha_publicacion:
          type: string
          format: date-time
          description: Fecha y hora en que se publicó el aviso
          example: "2025-01-15T10:00:00Z"

    HistorialAvisosResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total de avisos disponibles
          example: 50
        avisos:
          type: array
          items:
            $ref: '#/components/schemas/Aviso'
    Solicitud:
      type: object
      properties:
        solicitudes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              nombre:
                type: string
              email:
                type: string
              telefono:
                type: string
              tipo:
                type: string
              estado:
                type: string
              descripcion:
                type: string
              comentario:
                type: string
              fechaCreacion:
                type: string
        pages:
          type: object
          $ref: '#/components/schemas/Pages'
    ResidenteUnidad:
      type: object
      properties:
        unidades:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Unidad'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'
    Unidad:
      type: object
      properties:
        id:
          type: string
        interior:
          type: string
        apto:
          type: string
        estado:
          type: string

    UnidadesConjunto:
      type: object
      properties:
        unidades:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Unidad'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'

    ResidentesUnidad:
      type: object
      properties:
        residentes:
          type: array
          items:
            $ref: '#/components/schemas/Residente'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'

    Residente:
      type: object
      properties:
        idResidenteUnidad:
          type: string
        nombre:
          type: string
        email:
          type: string
        telefono:
          type: string
        tipo:
          type: string
        estado:
          type: string
        fechaRegistro:
          type: string

    UnidadConceptos:
      type: object
      properties:
        conceptos:
          type: array
          items:
            $ref: '#/components/schemas/Concepto'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'

    UnidadCuentasCobro:
      type: object
      properties:
        cuentasCobro:
          type: array
          items:
            $ref: '#/components/schemas/CuentaCobro'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'

    CuentasCobro:
      type: object
      properties:
        cuentasCobro:
          type: array
          items:
            $ref: '#/components/schemas/CuentaCobro'
        pages:
          type: object
          $ref: '#/components/schemas/Pages'


    CuentaCobro:
      type: object
      properties:
        id:
          type: string
        estado:
          type: string
        fechaInicio:
          type: string
        fechaFin:
          type: string
        total:
          type: number
          format: double
        conceptos:
          type: array
          items:
            $ref: '#/components/schemas/Concepto'
        fechaRegistro:
          type: string
        unidad:
          type: object
          $ref: '#/components/schemas/Unidad'

    RegistrarCuentaCobro:
      type: object
      properties:
        fechaInicio:
          type: number
        fechaFin:
          type: number

    RegistrarCuentaCobroUnidad:
      type: object
      properties:
        fechaInicio:
          type: number
        fechaFin:
          type: number
        idConcepto:
          type: number
        idUnidad:
          type: number
    PagoManual:
      type: object
      properties:
        idCuenta:
          type: number
        montoPagado:
          type: number
          format: float
          description: Monto total pagado
          example: 150000.00
        metodoPago:
          type: string
          enum: ['transferencia', 'efectivo']
          description: Método de pago utilizado (puede ser transferencia bancaria o efectivo)
          example: "transferencia"
        fechaPago:
          type: integer
          description: Fecha en la que se realizó el pago

    Pages:
      type: object
      properties:
        size:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
